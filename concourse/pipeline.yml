---
groups:
- name: all
  jobs:
    - test-develop
    - deploy-develop
    - test-release
    - deploy-staging
    - sonar
    - acceptance-staging
    - smoke-staging
    - publish-rc
    - merge-release-to-master
    - test-master
    - tag-master
    - publish-release
    - bump-version
    - deploy-prod
    - merge-release-to-develop
- name: development
  jobs:
    - test-develop
    - deploy-develop
- name: staging
  jobs:
    - test-release
    - deploy-staging
    - sonar
    - acceptance-staging
    - smoke-staging
    - publish-rc
- name: production
  jobs:
    - merge-release-to-master
    - test-master
    - publish-release
    - tag-master
    - bump-version
    - deploy-prod
    - merge-release-to-develop

resources:
  - name: repo-develop
    type: git
    source:
      uri: {{sample-spring-cloud-svc-uri}}
      branch: develop
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-release
    type: git
    source:
      uri: {{sample-spring-cloud-svc-uri}}
      branch: release
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: repo-master
    type: git
    source:
      uri: {{sample-spring-cloud-svc-uri}}
      branch: master
      private_key: {{github-private-key}}
    check_every: 10s # for demo

  - name: pipeline
    type: git
    source:
      uri: https://github.com/pivotalservices/sample-spring-cloud-svc-ci.git
      branch: legacy-master

  - name: version
    type: semver
    source:
      uri: {{sample-spring-cloud-svc-uri}}
      branch: version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 1.0.0

  - name: cf-prod
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-prod}}
      skip_cert_check: true

  - name: cf-staging
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-staging}}
      skip_cert_check: true

  - name: cf-dev
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-dev}}
      skip_cert_check: true

  - name: release-candidate
    type: s3
    source:
      bucket: {{s3-bucket}}
      regexp: sample-spring-cloud-svc-(.*).jar
      access_key_id: {{s3-access-key-id}}
      secret_access_key: {{s3-secret-access-key}}

  # - name: release-final
  #   type: s3
  #   source:
  #     bucket: {{s3-bucket}}
  #     regexp: sample-spring-cloud-svc-(.*).jar
  #     access_key_id: {{s3-access-key-id}}
  #     secret_access_key: {{s3-secret-access-key}}

  - name: gradle
    type: docker-image
    source:
      repository: malston/sample-spring-cloud-svc-ci-gradle-cache-cache

jobs:
  - name: test-develop
    serial: true
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-develop
          trigger: true
      - task: unit
        file: pipeline/concourse/tasks/unit.yml

  - name: deploy-develop
    serial: true
    public: false
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-develop
          passed: [ test-develop ]
          trigger: true
      - task: build
        file: pipeline/concourse/tasks/build.yml
        params:
          JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-dev
        params:
          manifest: repo/manifest-dev.yml
          path: build/sample-spring-cloud-svc-*.jar
          current_app_name: {{cf-app-name}}

  - name: test-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-release
          trigger: true
      - task: unit
        file: pipeline/concourse/tasks/unit.yml

  - name: deploy-staging
    serial: true
    public: false
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: version
          params: {pre: rc}
        - get:  repo
          resource: repo-release
          passed: [ test-release ]
          trigger: true
      - task: build-rc
        file: pipeline/concourse/tasks/build-rc.yml
        params:
          JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-staging
        params:
          manifest: repo/manifest-stg.yml
          path: build/sample-spring-cloud-svc-*.jar
          current_app_name: {{cf-app-name}}
      - put: release-candidate
        params:
          file: build/sample-spring-cloud-svc-*.jar

  - name: acceptance-staging
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-release
          passed: [deploy-staging]
          trigger: true
      - task: cats
        file: pipeline/concourse/tasks/cats.yml
        params:
          CF_APP_NAME: {{cf-app-name}}
          CF_API: {{cf-api}}
          CF_USER: {{cf-username}}
          CF_PASSWORD: {{cf-password}}
          CF_ORG: {{cf-org}}
          CF_SPACE: {{cf-space-staging}}
          CF_DOMAIN: {{cf-domain}}
          CF_HOST_NAME: {{cf-host-staging}}

  - name: smoke-staging
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-release
          passed: [deploy-staging]
          trigger: true
      - task: cats
        file: pipeline/concourse/tasks/smoke.yml
        params:
          CF_APP_NAME: {{cf-app-name}}
          CF_API: {{cf-api}}
          CF_USER: {{cf-username}}
          CF_PASSWORD: {{cf-password}}
          CF_ORG: {{cf-org}}
          CF_SPACE: {{cf-space-staging}}
          CF_DOMAIN: {{cf-domain}}
          CF_HOST_NAME: {{cf-host-staging}}

  - name: merge-release-to-master
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: repo
          resource: repo-master
        - get: repo-release
          passed: [ test-release ]
      - task: merge-release-to-master
        file: pipeline/concourse/tasks/merge-release-to-master.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out

  - name: test-master
    serial: true
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-master
          # comment out below to support hotfix
          passed: [ merge-release-to-master ]
          trigger: true
      - task: unit
        file: pipeline/concourse/tasks/unit.yml

  - name: tag-master
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get:  repo
          resource: repo-master
          passed: [ test-master ]
          trigger: true
        - get: repo-release
        - get: version
          params: {bump: final}
      - task: bump-to-release-version
        file: pipeline/concourse/tasks/bump-to-release-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out
          tag: version/number

  - name: bump-version
    serial_groups: [version]
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get:  repo-master
          passed: [ tag-master ]
          trigger: true
        - get:  repo
          resource: repo-release
        - get: version
          params: {bump: patch}
      - task: bump-to-next-develop-version
        file: pipeline/concourse/tasks/bump-to-next-develop-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-release
        params:
          repository: out
      - put: version
        params: {file: version/number}

  - name: merge-release-to-develop
    public: true
    plan:
      - aggregate:
        - get: pipeline
        - get: repo
          resource: repo-develop
        - get: repo-release
          passed: [ bump-version ]
          trigger: true
      - task: merge-release-to-develop
        file: pipeline/concourse/tasks/merge-release-to-develop.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-develop
        params:
          repository: out

  - name: publish-release
    plan:
      - aggregate:
        - get: pipeline
        - get: version
        - get: gradle
        - get: repo
          resource: repo-master
          passed: [ tag-master ]
          trigger: true
      - task: publish-release
        file: pipeline/concourse/tasks/publish-artifact.yml
        params:
          NEXUS_URL: {{nexus-url}}

  - name: deploy-prod
    public: false
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: version
          params: {pre: final}
        - get:  repo
          resource: repo-master
          passed: [ publish-release ]
          trigger: true
      - task: build-final
        file: pipeline/concourse/tasks/build-rc.yml
        params:
          JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
      - put: cf-prod
        params:
          manifest: repo/manifest.yml
          path: build/sample-spring-cloud-svc-*.jar
          current_app_name: {{cf-app-name}}

  - name: sonar
    plan:
      - aggregate:
        - get: pipeline
        - get: gradle
        - get: repo
          resource: repo-release
          passed: [ test-release ]
          trigger: true
      - task: publish-quality-metrics
        file: pipeline/concourse/tasks/publish-quality-metrics.yml
        params:
          SONAR_URL: {{sonar-url}}

  - name: publish-rc
    plan:
      - aggregate:
        - get: pipeline
        - get: version
          params: {pre: rc}
        - get: gradle
        - get: repo
          resource: repo-release
          passed: [ smoke-staging, acceptance-staging, sonar ]
          trigger: true
      - task: publish-rc
        file: pipeline/concourse/tasks/publish-artifact.yml
        params:
          NEXUS_URL: {{nexus-url}}

  - name: major
    serial_groups: [version]
    plan:
      - put: version
        params: {bump: major}

  - name: minor
    serial_groups: [version]
    plan:
      - put: version
        params: {bump: minor}

  - name: patch
    serial_groups: [version]
    plan:
      - put: version
        params: {bump: patch}
